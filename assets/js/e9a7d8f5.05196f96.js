"use strict";(self.webpackChunktrinity_validator=self.webpackChunktrinity_validator||[]).push([[7751],{158:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>a});var s=o(5893),t=o(1151);const r={title:"Run the Node",description:"Start your node",sidebar_position:5},d=void 0,i={id:"node/methods/manual/node-run",title:"Run the Node",description:"Start your node",source:"@site/docs/node/methods/manual/node-run.md",sourceDirName:"node/methods/manual",slug:"/node/methods/manual/node-run",permalink:"/docs/node/methods/manual/node-run",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Run the Node",description:"Start your node",sidebar_position:5},sidebar:"nodeSidebar",previous:{title:"Node Configuration",permalink:"/docs/node/methods/manual/node-config"},next:{title:"Linux Script",permalink:"/docs/node/methods/linux-script"}},c={},a=[{value:"Enabling Autorestart Function",id:"enabling-autorestart-function",level:2},{value:"Wireguard",id:"wireguard",level:3},{value:"V2Ray",id:"v2ray",level:3},{value:"Without Autorestart Function",id:"without-autorestart-function",level:2},{value:"Create a Screen session",id:"create-a-screen-session",level:3},{value:"Run the Node",id:"run-the-node",level:3},{value:"Detach from the screen session",id:"detach-from-the-screen-session",level:3},{value:"Post Node Run Commands",id:"post-node-run-commands",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components},{Details:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Running a node can be done in two ways: with or without the autorestart function. If you do not want to use it, you need to use a screen session to detach from the node after launching the docker run command."}),"\n",(0,s.jsxs)(n.admonition,{title:"Important",type:"danger",children:[(0,s.jsxs)(n.p,{children:["Before starting the node, remember to send a few DVPN (",(0,s.jsx)(n.strong,{children:"50"})," should suffice) to the operator address otherwise the node will not start!\nTo accomplish this, import the seed you generated or recovered in ",(0,s.jsx)(n.a,{href:"/docs/node/methods/manual/node-config#add-a-mnemonic",children:(0,s.jsx)(n.strong,{children:"this step"})})," into a wallet such as Leap or Keplr."]}),(0,s.jsxs)(n.p,{children:["If you are running your node for testing purposes you can use the ",(0,s.jsx)(n.a,{href:"https://faucet.im/",children:(0,s.jsx)(n.strong,{children:"Node Faucet"})})]})]}),"\n",(0,s.jsx)(n.h2,{id:"enabling-autorestart-function",children:"Enabling Autorestart Function"}),"\n",(0,s.jsxs)(n.p,{children:["To use autorestart function you must have set ",(0,s.jsx)(n.code,{children:"backend='test'"})," on ",(0,s.jsx)(n.code,{children:"config.toml"})," file. This is the easiest way, as it doesn't require the passphrase to be entered every time the node stops for any reason. However, it's worth noting that this solution is not recommended."]}),"\n",(0,s.jsx)(n.h3,{id:"wireguard",children:"Wireguard"}),"\n",(0,s.jsxs)(n.p,{children:["To run the node, use the following command and remember to include the ports you chose in your ",(0,s.jsx)(n.code,{children:"config.toml"})," and ",(0,s.jsx)(n.code,{children:"wireguard.toml"})," files (in this example, replace ",(0,s.jsx)(n.code,{children:"<API_PORT>"})," with ",(0,s.jsx)(n.code,{children:"7777"})," and ",(0,s.jsx)(n.code,{children:"<WIREGUARD_PORT>"})," with ",(0,s.jsx)(n.code,{children:"8888"})," (without the ",(0,s.jsx)(n.code,{children:"'<'"})," and ",(0,s.jsx)(n.code,{children:"'>'"}),"):"]}),"\n",(0,s.jsxs)(o,{children:[(0,s.jsx)("summary",{children:"Run Command with Autorestart"}),(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run -d \\\n    --name sentinel-dvpn-node \\\n    --restart unless-stopped \\\n    --volume ${HOME}/.sentinelnode:/root/.sentinelnode \\\n    --volume /lib/modules:/lib/modules \\\n    --cap-drop ALL \\\n    --cap-add NET_ADMIN \\\n    --cap-add NET_BIND_SERVICE \\\n    --cap-add NET_RAW \\\n    --cap-add SYS_MODULE \\\n    --sysctl net.ipv4.ip_forward=1 \\\n    --sysctl net.ipv6.conf.all.disable_ipv6=0 \\\n    --sysctl net.ipv6.conf.all.forwarding=1 \\\n    --sysctl net.ipv6.conf.default.forwarding=1 \\\n    --publish <API_PORT>:<API_PORT>/tcp \\\n    --publish <WIREGUARD_PORT>:<WIREGUARD_PORT>/udp \\\n    sentinel-dvpn-node process start\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"v2ray",children:"V2Ray"}),"\n",(0,s.jsxs)(n.p,{children:["To run the node, use the following command and remember to include the ports you chose in your ",(0,s.jsx)(n.code,{children:"config.toml"})," and ",(0,s.jsx)(n.code,{children:"v2ray.toml"})," files (in this example, replace ",(0,s.jsx)(n.code,{children:"<API_PORT>"})," with ",(0,s.jsx)(n.code,{children:"7777"})," and ",(0,s.jsx)(n.code,{children:"<V2RAY_PORT>"})," with ",(0,s.jsx)(n.code,{children:"9999"})," (without the ",(0,s.jsx)(n.code,{children:"'<'"})," and ",(0,s.jsx)(n.code,{children:"'>'"}),"):"]}),"\n",(0,s.jsxs)(o,{children:[(0,s.jsx)("summary",{children:"Run Command with Autorestart"}),(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'docker run -d \\\n    --restart unless-stopped \\\n    --volume "${HOME}/.sentinelnode:/root/.sentinelnode" \\\n    --publish <API_PORT>:<API_PORT>/tcp \\\n    --publish <V2RAY_PORT>:<V2RAY_PORT>/tcp \\\n    sentinel-dvpn-node process start\n'})})})]}),"\n",(0,s.jsx)(n.h2,{id:"without-autorestart-function",children:"Without Autorestart Function"}),"\n",(0,s.jsx)(n.p,{children:"If you prefer not to initiate your node using the autorestart function, you should employ a screen session to detach from the node after executing the docker run command."}),"\n",(0,s.jsx)(n.h3,{id:"create-a-screen-session",children:"Create a Screen session"}),"\n",(0,s.jsx)(n.p,{children:"Before running the node, we recommend starting a screen session to run the Docker command. First, install the screen package"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo apt-get install screen\n"})}),"\n",(0,s.jsx)(n.p,{children:"Open a new screen session with the following command (\"dvpn' is the session name)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"screen -t dvpn -S dvpn\n"})}),"\n",(0,s.jsx)(n.p,{children:"Use the appropriate command to run the node based on the node type specified in the config.toml file. Wireguard To run the node, use the following command and remember to include the TCP and UDP ports"}),"\n",(0,s.jsx)(n.h3,{id:"run-the-node",children:"Run the Node"}),"\n",(0,s.jsx)(n.p,{children:"Depending on the protocol you have selected, run the corresponding command"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Wireguard"})}),"\n",(0,s.jsxs)(n.p,{children:["To run the node, use the following command and remember to include the ports you chose in your ",(0,s.jsx)(n.code,{children:"config.toml"})," and ",(0,s.jsx)(n.code,{children:"wireguard.toml"})," files (in this example, replace ",(0,s.jsx)(n.code,{children:"<API_PORT>"})," with ",(0,s.jsx)(n.code,{children:"7777"})," and ",(0,s.jsx)(n.code,{children:"<WIREGUARD_PORT>"})," with ",(0,s.jsx)(n.code,{children:"8888"})," (without the ",(0,s.jsx)(n.code,{children:"'<'"})," and ",(0,s.jsx)(n.code,{children:"'>'"}),"):"]}),"\n",(0,s.jsxs)(o,{children:[(0,s.jsx)("summary",{children:"Run Command without Autorestart"}),(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run --rm \\\n    --name sentinel-dvpn-node \\\n    --interactive \\\n    --tty \\\n    --volume ${HOME}/.sentinelnode:/root/.sentinelnode \\\n    --volume /lib/modules:/lib/modules \\\n    --cap-drop ALL \\\n    --cap-add NET_ADMIN \\\n    --cap-add NET_BIND_SERVICE \\\n    --cap-add NET_RAW \\\n    --cap-add SYS_MODULE \\\n    --sysctl net.ipv4.ip_forward=1 \\\n    --sysctl net.ipv6.conf.all.disable_ipv6=0 \\\n    --sysctl net.ipv6.conf.all.forwarding=1 \\\n    --sysctl net.ipv6.conf.default.forwarding=1 \\\n    --publish <API_PORT>:<API_PORT>/tcp \\\n    --publish <WIREGUARD_PORT>:<WIREGUARD_PORT>/udp \\\n    sentinel-dvpn-node process start\n"})})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"V2Ray"})}),"\n",(0,s.jsxs)(n.p,{children:["To run the node, use the following command and remember to include the ports you chose in your ",(0,s.jsx)(n.code,{children:"config.toml"})," and ",(0,s.jsx)(n.code,{children:"v2ray.toml"})," files (in this example, replace ",(0,s.jsx)(n.code,{children:"<API_PORT>"})," with ",(0,s.jsx)(n.code,{children:"7777"})," and ",(0,s.jsx)(n.code,{children:"<V2RAY_PORT>"})," with ",(0,s.jsx)(n.code,{children:"9999"})," (without the ",(0,s.jsx)(n.code,{children:"'<'"})," and ",(0,s.jsx)(n.code,{children:"'>'"}),"):"]}),"\n",(0,s.jsxs)(o,{children:[(0,s.jsx)("summary",{children:"Run Command without Autorestart"}),(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'docker run --rm \\\n    --interactive \\\n    --tty \\\n    --volume "${HOME}/.sentinelnode:/root/.sentinelnode" \\\n    --publish <API_PORT>:<API_PORT>/tcp \\\n    --publish <V2RAY_PORT>:<V2RAY_PORT>/tcp \\\n    sentinel-dvpn-node process start\n'})})})]}),"\n",(0,s.jsx)(n.h3,{id:"detach-from-the-screen-session",children:"Detach from the screen session"}),"\n",(0,s.jsx)(n.p,{children:"Detach from the node screen session"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ctrl+a+d\n"})}),"\n",(0,s.jsx)(n.p,{children:"To re-attach to the session type"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"screen -x dvpn\n"})}),"\n",(0,s.jsx)(n.h2,{id:"post-node-run-commands",children:"Post Node Run Commands"}),"\n",(0,s.jsx)(n.p,{children:"Check if the node is running and visible to everyone. Open your browser and type the following URL"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"https://ip_node:tcp_port/status\n"})}),"\n",(0,s.jsx)(n.p,{children:"Node logs. You can specify a different number of logs if you need to view more or fewer entries"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker logs -f -n 100 sentinel-dvpn-node\n"})}),"\n",(0,s.jsx)(n.p,{children:"Container list/details"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker ps -a\n"})}),"\n",(0,s.jsx)(n.p,{children:"Restart a node (it stops and starts the node)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker restart sentinel-dvpn-node\n"})}),"\n",(0,s.jsx)(n.p,{children:"Stop a node"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker stop sentinel-dvpn-node\n"})}),"\n",(0,s.jsx)(n.p,{children:"Start a stopped node"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker start sentinel-dvpn-node\n"})}),"\n",(0,s.jsx)(n.p,{children:"Remove a node"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker rm -f sentinel-dvpn-node\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>i,a:()=>d});var s=o(7294);const t={},r=s.createContext(t);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);