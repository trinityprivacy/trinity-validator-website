"use strict";(self.webpackChunktrinity_validator=self.webpackChunktrinity_validator||[]).push([[3187],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>v});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),s=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(a),m=n,v=u["".concat(c,".").concat(m)]||u[m]||p[m]||o;return a?r.createElement(v,i(i({ref:t},d),{},{components:a})):r.createElement(v,i({ref:t},d))}));function v(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4027:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=a(7462),n=(a(7294),a(3905));const o={title:"Become a Validator",sidebar_position:6},i="Become a Validator",l={unversionedId:"validator/validator-tx",id:"validator/validator-tx",title:"Become a Validator",description:"A create-validator transaction is a type of transaction used to create a new validator. In this type of transaction, the validator stakes a certain amount of tokens as collateral.",source:"@site/docs/validator/validator-tx.md",sourceDirName:"validator",slug:"/validator/validator-tx",permalink:"/trinity-validator-website/docs/validator/validator-tx",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/validator/validator-tx.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Become a Validator",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Run the Full Node",permalink:"/trinity-validator-website/docs/validator/node-run"},next:{title:"Basic Commands",permalink:"/trinity-validator-website/docs/validator/basic-cmd"}},c={},s=[],d={toc:s},u="wrapper";function p(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"become-a-validator"},"Become a Validator"),(0,n.kt)("p",null,"A create-validator transaction is a type of transaction used to create a new validator. In this type of transaction, the validator stakes a certain amount of tokens as collateral."),(0,n.kt)("p",null,"Add an operator key and take note of the mnemonic key"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'KEY_NAME="validator"\n\u200b\nsentinelhub keys add "${KEY_NAME}"\n')),(0,n.kt)("p",null,"Make the create-validator transaction"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'CONSENSUS_PUBLIC_KEY=$(sentinelhub tendermint show-validator)\nDELEGATION_AMOUNT="5000000000udvpn"\nMONIKER="Your Validator Name"\n\u200b\nsentinelhub tx staking create-validator \\\n    --broadcast-mode=block \\\n    --min-self-delegation=1 \\\n    --chain-id=sentinelhub-2 \\\n    --commission-max-change-rate=0.01 \\\n    --commission-max-rate=0.2 \\\n    --commission-rate=0.05 \\\n    --gas=500000 \\\n    --gas-prices=0.1udvpn \\\n    --amount=${DELEGATION_AMOUNT} \\\n    --from="${KEY_NAME}" \\\n    --moniker="${MONIKER}" \\\n    --pubkey="${CONSENSUS_PUBLIC_KEY}"\n')))}p.isMDXComponent=!0}}]);