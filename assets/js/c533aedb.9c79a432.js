"use strict";(self.webpackChunktrinity_validator=self.webpackChunktrinity_validator||[]).push([[3075],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=p(n),d=o,y=s["".concat(u,".").concat(d)]||s[d]||m[d]||i;return n?r.createElement(y,a(a({ref:t},c),{},{components:n})):r.createElement(y,a({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[s]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3804:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const i={title:"Monitoring with Uptime Kuma",description:"How to monitor your running node",sidebar_position:7},a="Monitoring with Uptime Kuma",l={unversionedId:"node/monitoring",id:"node/monitoring",title:"Monitoring with Uptime Kuma",description:"How to monitor your running node",source:"@site/docs/node/monitoring.md",sourceDirName:"node",slug:"/node/monitoring",permalink:"/trinity-validator-website/docs/node/monitoring",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/node/monitoring.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Monitoring with Uptime Kuma",description:"How to monitor your running node",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Run the Node",permalink:"/trinity-validator-website/docs/node/node-run"},next:{title:"Donations",permalink:"/trinity-validator-website/docs/node/donations"}},u={},p=[],c={toc:p},s="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(s,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"monitoring-with-uptime-kuma"},"Monitoring with Uptime Kuma"),(0,o.kt)("p",null,"To ensure constant monitoring of your node to prevent any downtime, we highly recommend using ",(0,o.kt)("a",{parentName:"p",href:"https://uptime.kuma.pet/"},"Uptime Kuma"),". This tool can be self-hosted using a Docker container by executing the following command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1\n")),(0,o.kt)("p",null,"Once the container has started and appears healthy, you can access Uptime Kuma through HTTP"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"http://localhost:3001\n")),(0,o.kt)("p",null,"Now, you can click on ",(0,o.kt)("inlineCode",{parentName:"p"},"Add new monitor"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"on Monitor type select ",(0,o.kt)("inlineCode",{parentName:"li"},"TCP Port")),(0,o.kt)("li",{parentName:"ul"},"in the Hostname field, add your node's IP address"),(0,o.kt)("li",{parentName:"ul"},"in the Port field, add the TCP port (on this guide, the port is ",(0,o.kt)("inlineCode",{parentName:"li"},"12345"),")")),(0,o.kt)("p",null,"In Notifications, you can select your favorite notification type. Let's cover an example using Telegram."),(0,o.kt)("p",null,"Go to ",(0,o.kt)("a",{parentName:"p",href:"https://t.me/BotFather."},"BotFather"),", create your alert bot and take note of the generated token"),(0,o.kt)("p",null,"Go to ",(0,o.kt)("a",{parentName:"p",href:"https://t.me/chatIDrobot"},"ChatIDrobot")," and get your chat_id"),(0,o.kt)("p",null,'Write a "test message on your bot"'),(0,o.kt)("p",null,"Click on the link to check the api"),(0,o.kt)("p",null,"Finally click on Test to check if the Telegram alert system works"),(0,o.kt)("p",null,"Then save."),(0,o.kt)("p",null,"Contratulations, your bot is now active!"))}m.isMDXComponent=!0}}]);