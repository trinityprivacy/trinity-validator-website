"use strict";(self.webpackChunktrinity_validator=self.webpackChunktrinity_validator||[]).push([[1047],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=a.createContext({}),u=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(r),m=o,y=d["".concat(l,".").concat(m)]||d[m]||c[m]||n;return r?a.createElement(y,i(i({ref:t},p),{},{components:r})):a.createElement(y,i({ref:t},p))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,i=new Array(n);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<n;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8355:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>n,metadata:()=>s,toc:()=>u});var a=r(7462),o=(r(7294),r(3905));const n={title:"Submit Operator",sidebar_position:3},i="Submit Operator",s={unversionedId:"validator/restake/submit-operator",id:"validator/restake/submit-operator",title:"Submit Operator",description:"The REStake bot will automatically re-stake your rewards. To do this, you need to submit your operator address to the Validator Registry.",source:"@site/docs/validator/restake/submit-operator.md",sourceDirName:"validator/restake",slug:"/validator/restake/submit-operator",permalink:"/trinity-validator-website/docs/validator/restake/submit-operator",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/validator/restake/submit-operator.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Submit Operator",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Setup & Configuration",permalink:"/trinity-validator-website/docs/validator/restake/setup-config"},next:{title:"Cosmovisor",permalink:"/trinity-validator-website/docs/category/cosmovisor"}},l={},u=[{value:"Fork and clone the Validator Registry",id:"fork-and-clone-the-validator-registry",level:2}],p={toc:u},d="wrapper";function c(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"submit-operator"},"Submit Operator"),(0,o.kt)("p",null,"The REStake bot will automatically re-stake your rewards. To do this, you need to submit your operator address to the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/eco-stake/validator-registry"},"Validator Registry"),"."),(0,o.kt)("h2",{id:"fork-and-clone-the-validator-registry"},"Fork and clone the Validator Registry"),(0,o.kt)("p",null,"Update the Validator Registry to include your operator data for auto-compounding on any desired networks."),(0,o.kt)("p",null,"Fork the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/eco-stake/validator-registry"},"Validator Registry")," repository."),(0,o.kt)("p",null,"Clone the Validator Registry repository fork."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/<your-github-user-name>/\nrestake-validator-registry\n")),(0,o.kt)("p",null,"Create a new directory for your validator:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir <your-validator-name>\ncd <your-validator-name>\n")),(0,o.kt)("p",null,"Create the file ",(0,o.kt)("inlineCode",{parentName:"p"},"chain.json")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano chains.json\n")),(0,o.kt)("p",null,"Add the following block"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=chains.json",title:"chains.json"},'{\n  "$schema": "../chains.schema.json",\n  "name": "<your_validator_name>",\n  "chains": [\n    {\n      "name": "sentinel",\n      "address": "<your_validator_sentvaloper_address>",\n      "restake": {\n        "address": "<your_restake_operator_address>",\n        "run_time": "every 1 hour",\n        "minimum_reward": 1000000\n      }\n    }\n  ]\n}\n')),(0,o.kt)("p",null,"Create the file ",(0,o.kt)("inlineCode",{parentName:"p"},"profile.json")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano profile.json\n")),(0,o.kt)("p",null,"Add the following block"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=profile.json",title:"profile.json"},'{\n  "$schema": "../profile.schema.json",\n  "name": "<your_validator_name>",\n  "identity": "<your_16_digit_keybase_identity>"\n}\n')),(0,o.kt)("p",null,"Push to the origin and create a pull request adding a commit message"))}c.isMDXComponent=!0}}]);