"use strict";(self.webpackChunktrinity_validator=self.webpackChunktrinity_validator||[]).push([[239],{4641:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var i=t(5893),o=t(1151);const s={title:"Overview",sidebar_position:1},r="Node Monitoring",a={id:"sentinelguides/monitoring/README",title:"Overview",description:"Running a node or a validator requires a reliable monitoring system to prevent downtime, missed blocks, and reputation damage. Alerting is also essential to notify you of issues.",source:"@site/docs/sentinelguides/monitoring/README.md",sourceDirName:"sentinelguides/monitoring",slug:"/sentinelguides/monitoring/",permalink:"/docs/sentinelguides/monitoring/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Overview",sidebar_position:1},sidebar:"monitoringSidebar",next:{title:"Node Exporter",permalink:"/docs/sentinelguides/monitoring/metrics/exporters/node-exporter"}},l={},d=[{value:"Metrics Collection",id:"metrics-collection",level:2},{value:"Node Machine",id:"node-machine",level:3},{value:"Monitoring Machine",id:"monitoring-machine",level:3},{value:"Logs Collection",id:"logs-collection",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"node-monitoring",children:"Node Monitoring"}),"\n",(0,i.jsxs)(n.p,{children:["Running a node or a validator requires a reliable monitoring system to prevent downtime, missed blocks, and reputation damage. Alerting is also essential to notify you of issues.\nWe'll use established monitoring and visualization tools as part of a ",(0,i.jsx)(n.strong,{children:"stack"})," or ",(0,i.jsx)(n.strong,{children:"standalone"})," solutions."]}),"\n",(0,i.jsx)(n.p,{children:"A monitoring stack comprises a set of tools that require installation on both your local node machine and a dedicated monitoring machine. The data collection process involves two main types: metrics collection and logs collection."}),"\n",(0,i.jsx)(n.h2,{id:"metrics-collection",children:"Metrics Collection"}),"\n",(0,i.jsx)(n.p,{children:"Metrics collection involves gathering and monitoring various quantitative data points that provide insights into the performance and health of a system."}),"\n",(0,i.jsx)(n.h3,{id:"node-machine",children:"Node Machine"}),"\n",(0,i.jsxs)(n.p,{children:["The first monitoring tools are called ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Exporters"})})," and are agents that run on your node machine. They collect various system-level metrics and expose them in a format that can be understood by Prometheus."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/sentinelguides/monitoring/metrics/exporters/node-exporter",children:(0,i.jsx)(n.strong,{children:"Node Exporter"})}),": it collects various system-level metrics, such as CPU usage, memory usage, disk usage, network activity, and others."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/sentinelguides/monitoring/metrics/exporters/tendermint",children:(0,i.jsx)(n.strong,{children:"Tendermint Metrics"})}),": it collects various system-level metrics of your validator, and can be easily enabled from your validator configuration file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/sentinelguides/monitoring/metrics/exporters/cosmos-validator-exporter",children:(0,i.jsx)(n.strong,{children:"Cosmos Validator Exporter"})}),": a Prometheus scraper designed to retrieve validator statistics from an LCD server exposed by a full node. It was created by Quokkastake, a very active community member."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/sentinelguides/monitoring/metrics/exporters/cosmos-node-exporter",children:(0,i.jsx)(n.strong,{children:"Cosmos Node Exporter"})}),": another Prometheus scraper created by Quokkastake, designed to collect other essential data for monitoring your node."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"monitoring-machine",children:"Monitoring Machine"}),"\n",(0,i.jsx)(n.p,{children:"The next three monitoring tools must be installed on a separated machine which is used just to monitor your node."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/sentinelguides/monitoring/metrics/alertmanager",children:(0,i.jsx)(n.strong,{children:"Alert Manager"})}),": a component of the Prometheus monitoring and alerting toolkit responsible. for handling alerts sent by client applications such as Prometheus server and then managing the routing and notification of these alerts to different receivers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/sentinelguides/monitoring/metrics/prometheus",children:(0,i.jsx)(n.strong,{children:"Prometheus"})}),": a monitoring system that collects metrics from the Exporters. It stores the metrics in a time-series database and provides a powerful query language to extract and aggregate the data. Prometheus also has an alerting system that can be used to send notifications when certain thresholds are breached."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"How does this stack of tools work?"}),"\n",(0,i.jsx)(n.p,{children:"In terms of communication, the Exporters send metrics to Prometheus over HTTP. Prometheus scrapes the metrics from the Exporters on a regular interval, typically every few seconds. Once the data is collected, Prometheus stores it in its time-series database. Grafana, in turn, connects to Prometheus as a data source and queries the data using the powerful Prometheus query language. Grafana then uses this data to create beautiful visualizations that can be shared with others."}),"\n",(0,i.jsx)(n.h2,{id:"logs-collection",children:"Logs Collection"}),"\n",(0,i.jsx)(n.p,{children:"Logs collection involves gathering and storing textual records or entries generated by various components within a system or application. These logs provide detailed information about events, actions, errors, and status changes that occur during the operation of the system. Unlike metrics, which are numeric and quantitative, logs are often qualitative and provide a more detailed narrative of what transpires within a system."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Node Machine"}),": ",(0,i.jsx)(n.a,{href:"/docs/sentinelguides/monitoring/logs/promtail",children:"Promtail"}),", an agent used for scraping and forwarding logs to Loki"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monitor Machine"}),": ",(0,i.jsx)(n.a,{href:"/docs/sentinelguides/monitoring/logs/loki",children:"Loki"}),", a central log aggregation system that stores and indexes logs"]}),"\n"]}),"\n",(0,i.jsx)(n.h1,{id:"grafana",children:"Grafana"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/sentinelguides/monitoring/grafana",children:"Grafana"})," serves as a powerful visualization tool, enabling the creation of interactive dashboards and charts that present data collected by Prometheus and logs gathered by Loki in a visually appealing and comprehensible manner."]}),"\n",(0,i.jsx)(n.h1,{id:"uptime-kuma",children:"Uptime Kuma"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/sentinelguides/monitoring/uptime-kuma",children:"Uptime Kuma"})," consists of a single tool that only needs to be installed on a dedicated machine, specifically designed to monitor the uptime of your nodes."]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>r});var i=t(7294);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);